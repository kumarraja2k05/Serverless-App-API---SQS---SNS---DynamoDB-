AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  food-selection-system

  Sample SAM Template for food-selection-system

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  FoodSNS:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: FoodSelection
    
  FoodSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: FoodSelectionSQS

  FoodQueueToFoodSnsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt FoodSQS.Arn
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn: !Ref FoodSNS

  SQSQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref FoodSQS
      PolicyDocument:
        Statement:
          Effect: Allow
          Principal: {
            Service: "sns.amazonaws.com"
          }
          Action: "sqs:SendMessage"
          Resource: !GetAtt FoodSQS.Arn
          Condition:
            ArnEquals:
              "aws:SourceArn": !Ref FoodSNS

  FoodItemPostFuncion:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: create_food/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          SNStopic: !Ref FoodSNS
          SQSQueue: !Ref FoodSQS
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt FoodSNS.TopicName
      Events:
        FoodAdd:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /food
            Method: post

  FilterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: filter_food/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          SQSQueue: !Ref FoodSQS
          TABLE_NAME: !Ref FoodDBTable
      Policies: 
        - SQSPollerPolicy:
            QueueName: !GetAtt FoodSQS.QueueName
        - SQSSendMessagePolicy:
            QueueName: !GetAtt FoodSQS.QueueName
        - DynamoDBCrudPolicy:
            TableName: !Ref FoodDBTable
      Events:
        SqsJobQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt FoodSQS.Arn
            BatchSize: 1
            FilterCriteria:
              Filters:
                - Pattern: '{ "body" : { "item_name" : [ "pizza" ] } }'

  FoodDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: FoodDBTable
      AttributeDefinitions:
        - AttributeName: food_item_id
          AttributeType: N
        - AttributeName: category
          AttributeType: S
      KeySchema:
        - AttributeName: food_item_id
          KeyType: HASH
        - AttributeName: category
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  FoodItemApi:
    Description: API Gateway endpoint URL for Prod stage for Create Food function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/food/"
  FoodItemPostFuncion:
    Description: Create Food Lambda Function ARN
    Value: !GetAtt FoodItemPostFuncion.Arn
  FoodItemPostFuncionIamRole:
    Description: Implicit IAM Role created for Create Food function
    Value: !GetAtt FoodItemPostFuncionRole.Arn
  FoodFilterFunction:
    Description: Filter the Food on basis of item
    Value: !GetAtt FilterFunction.Arn
  FoodFilterFuncionIamRole:
    Description: Implicit IAM Role created for Filter Food Function 
    Value: !GetAtt FilterFunctionRole.Arn
  SNStopicName:
    Description: SNS topic name
    Value: !GetAtt FoodSNS.TopicName
  SNStopicARN:
    Description: SNS topic ARN
    Value: !Ref FoodSNS
  SQSqueueName:
    Description: SQS Queue Name
    Value: !GetAtt FoodSQS.QueueName
  SQSqueueARN:
    Description: SQS Queue ARN
    Value: !Ref FoodSQS

